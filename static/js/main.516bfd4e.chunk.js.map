{"version":3,"sources":["components/BeerList.jsx","reducers/beersActions.js","reducers/optionsActions.js","components/Beers.jsx","App.js","serviceWorker.js","reducers/appReducer.js","reducers/beersReducer.js","reducers/optionsReducer.js","epics/fetchBeers.js","epics/optionsEpic.js","index.js","configureStore.js"],"names":["BeerList","beers","className","map","beer","key","id","src","image_url","alt","name","abv","volume","value","unit","fetchFulfilled","type","payload","fetchFailed","error","setStatus","status","fetchCancel","OPT","saveConfig","opts","perPage","page","connect","state","OPTIONS","fetchRandom","search","term","data","errors","itemsPerPage","params","split","useState","termSearching","setTermSearching","currPage","setPage","resPerPage","setResPerPage","onChangePage","diff","length","defaultValue","onChange","e","number","target","Array","from","v","i","placeholder","trim","onSearch","onClick","hidden","disabled","message","props","app","Boolean","window","location","hostname","match","initialState","appReducer","action","beersReducer","console","log","code","beerAPI","optionsReducer","optKey","getFromOptions","options","pending$","of","fetchRandomBeerEpic","action$","state$","getJSON","pipe","ofType","withLatestFrom","pluck","switchMap","resaultsNum","API","reqs","ajax$","forkJoin","res","timeout","catchError","err","response","concat","searchBeerEpic","debounceTime","filter","spread","Object","entries","val","push","api","encodeURIComponent","join","blocker$","take","mapTo","race","resetBeerEpic","fetchBeerEpic","presistEpic","tap","localStorage","setItem","JSON","stringify","ignoreElements","hydrateEpic","maybeConfig","getItem","parsed","parse","EMPTY","ReactDOM","render","store","dependencies","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","ajax","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","createStore","applyMiddleware","run","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.516bfd4e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function BeerList({ beers }) {\r\n  return (\r\n    <ul className=\"List\">\r\n      {beers && !beers[0] && <p className=\"centered\"> No beers found </p>}\r\n      {beers &&\r\n        beers[0] &&\r\n        beers.map(beer => {\r\n          return (\r\n            <li key={beer.id} className=\"List-item\">\r\n              <figure className=\"List-item-img\">\r\n                <img src={beer.image_url} alt=\"beer\" />\r\n              </figure>\r\n              <div className=\"List-item-info\">\r\n                <p>{beer.name}</p>\r\n                <ul>\r\n                  <li>\r\n                    <small>ABV: {beer.abv}</small>\r\n                  </li>\r\n                  <li>\r\n                    <small>\r\n                      Volume: {beer.volume.value} {beer.volume.unit}\r\n                    </small>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n}\r\n","export const FETCH_FULFILLED = \"FETCH_FULIFILLED\";\r\nexport const FETCH_FAILED = \"FETCH_FAILED\";\r\nexport const FETCH_DATA = \"FECTH_DATA\";\r\nexport const FETCH_RANDOM = \"FECTH_RANDOM\";\r\nexport const SET_STATUS = \"SET_STATUS\";\r\n// STATUS :\r\nexport const SEARCH = \"SEARCH\";\r\nexport const CANCEL = \"CANCEL\";\r\nexport const RESET = \"RESET\";\r\nexport const PENDING = \"PENDING\";\r\n\r\n\r\n// :::::::::::::::::::::::::::::::::::\r\n// action creator :\r\nexport function search(term) {\r\n  return {\r\n    type: SEARCH,\r\n    payload: term\r\n  };\r\n}\r\n\r\n\r\nexport function fetchFulfilled(beers) {\r\n  return {\r\n    type: FETCH_FULFILLED,\r\n    payload: beers\r\n  };\r\n}\r\n\r\nexport function fetchFailed(error) {\r\n  return {\r\n    type: FETCH_FAILED,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function setStatus(status) {\r\n  return {\r\n    type: SET_STATUS,\r\n    payload: status\r\n  };\r\n}\r\n\r\nexport function fetchCancel() {\r\n  return {\r\n    type: CANCEL\r\n  };\r\n}\r\n\r\nexport function fetchData() {\r\n  return {\r\n    type: FETCH_DATA\r\n  };\r\n}\r\n\r\nexport function fetchRandom() {\r\n  return {\r\n    type: FETCH_RANDOM\r\n  };\r\n}","// :::::::::::::::::::::::::::::::::::\r\n// TYPES :\r\nexport const SET_CONFIG = \"SET_CONFIG\";\r\nexport const OPTIONS = \"OPTIONS\";\r\nexport const OPTIONS_CACHE_KEY = \"params\";\r\n\r\n// AJAX & STRING OPTIONS:\r\nexport const OPT = {};\r\nOPT.perPage = \"&per_page=\";\r\nOPT.page = \"&page=\";\r\n//\r\n// :::::::::::::::::::::::::::::::::::\r\n// action creator :\r\n\r\nexport function saveConfig(key, value = null) {\r\n  const opts = OPT[key] + value;\r\n  return {\r\n    type: SET_CONFIG,\r\n    payload: [key,opts]\r\n  };\r\n}\r\n","import \"./beers.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BeerList } from \"./BeerList\";\r\n// STORE :\r\nimport { fetchRandom, search, fetchCancel } from \"../reducers/beersActions\";\r\nimport { saveConfig } from \"../reducers/optionsActions\";\r\n\r\n// ::::::::::::::::::::\r\n// THE COMPONENT  :\r\nexport function Beers({\r\n  data,\r\n  status,\r\n  fetchRandom,\r\n  fetchCancel,\r\n  saveConfig,\r\n  search,\r\n  errors,\r\n  OPTIONS\r\n}) {\r\n  //::::::::::\r\n  const { perPage } = OPTIONS.params && OPTIONS.params;\r\n  const itemsPerPage = perPage.split(\"=\")[1] || 10;\r\n\r\n  const [termSearching, setTermSearching] = useState(false);\r\n  const [currPage, setPage] = useState(1);\r\n  const [resPerPage, setResPerPage] = useState(itemsPerPage);\r\n\r\n  const onSearch = e => {\r\n    search(e.target.value);\r\n    setTermSearching(e.target.value.trim());\r\n  };\r\n\r\n  const cancel = () => {\r\n    fetchCancel();\r\n    setTermSearching(false);\r\n  };\r\n\r\n  const onSelect = number => {\r\n    setResPerPage(number);\r\n    saveConfig(\"perPage\", number);\r\n  };\r\n\r\n  const onChangePage = diff => {\r\n    if (currPage < 2 && diff < 0) return;\r\n    if (resPerPage > data.length && diff > 0) return;\r\n\r\n    setPage(page => page + diff);\r\n    saveConfig(\"page\", currPage);\r\n    if (termSearching) search(termSearching);\r\n    else fetchRandom()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App-inputs centered\">\r\n        <select\r\n          name=\"per-page\"\r\n          defaultValue={10}\r\n          onChange={e => onSelect(e.target.value)}\r\n        >\r\n          {Array.from({ length: 10 }, (v, i) => (i + 1) * 5).map(value => {\r\n            return (\r\n              <option key={value} value={value}>\r\n                {value} results\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search beer\"\r\n          onChange={e => onSearch(e)}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => cancel()}\r\n          hidden={\r\n            status !== \"SUCCESS\" && status !== \"FAILURE\" && !termSearching\r\n          }\r\n        >\r\n          { status === \"SUCCESS\" ? 'reset' :'cancel'}  \r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={fetchRandom}\r\n          disabled={status === \"PENDING\"}\r\n        >\r\n          get rendom beers!\r\n        </button>\r\n      </div>\r\n      {status === \"SUCCESS\" && (\r\n        <div className=\"App-content\">\r\n          {data && <BeerList beers={data} />}\r\n          <div className=\"list-pagination\">\r\n            <div\r\n              className=\"change-page\"\r\n              onClick={() => onChangePage(-1)}\r\n              hidden={currPage < 2}\r\n            >\r\n              Previous\r\n            </div>\r\n            <div\r\n              className=\"change-page\"\r\n              onClick={() => onChangePage(1)}\r\n              hidden={resPerPage > data.length}\r\n            >\r\n              Next\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {status === \"PENDING\" && (\r\n        <span className=\"App-spinner centered\">\r\n          <img src={\"/beer-loader.gif\"} className=\"beer-loader\" alt=\"loading\" />\r\n        </span>\r\n      )}\r\n\r\n      {status === \"FAILURE\" && (\r\n        <div className=\"App-content centered\">\r\n          <p> Oops! {errors && errors[0] && errors[0].message} </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapState(state) {\r\n  return {\r\n    ...state.beers,\r\n    OPTIONS: state.OPTIONS\r\n  };\r\n}\r\n\r\nexport default connect(mapState, {\r\n  fetchRandom,\r\n  search,\r\n  fetchCancel,\r\n  saveConfig\r\n})(Beers);\r\n","import React from \"react\";\nimport \"./css/App.css\";\n\nimport { connect } from \"react-redux\";\nimport Beers from \"./components/Beers\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <div className=\"centered\">\n      <h1> Beers App </h1>\n      <span className=\"subtitle\">by {props.app.name}</span>\n      </div>\n      <Beers />\n    </div>\n  );\n}\n\nexport default connect(state => state)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  name: \"niv\"\r\n};\r\n\r\nexport function appReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"SET_NAME\":\r\n      return {\r\n        ...state,\r\n        name: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_FULFILLED,\r\n  FETCH_FAILED,\r\n  SEARCH,\r\n  FETCH_DATA,\r\n  SET_STATUS,\r\n  CANCEL,\r\n} from \"./beersActions\";\r\n\r\n\r\n/// :::::::::::::::::::::::::::::::\r\n// initialState\r\n/// :::::::::::::::::::::::::::::::\r\nconst initialState = {\r\n  data: [],\r\n  errors: [], // {text , code}\r\n  status: \"IDLE\" // \"idle\", \"pending\" , \"succes\" , \"failure\", \"cancel\"\r\n};\r\n\r\n/// :::::::::::::::::::::::::::::::\r\n// beersReducer\r\n/// :::::::::::::::::::::::::::::::\r\nexport function beersReducer(state = initialState, action) {\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      };\r\n\r\n    case FETCH_DATA:\r\n      return {\r\n        ...state,\r\n        status: \"PENDING\"\r\n      };\r\n\r\n    case FETCH_FULFILLED:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        errors: [],\r\n        status: \"SUCCESS\"\r\n      };\r\n\r\n    case FETCH_FAILED:\r\n      const { message, code } =\r\n        action && action.payload\r\n          ? action.payload\r\n          : { message: \"unknown error, check your connection\", code: \"000\" };\r\n      return {\r\n        ...state,\r\n        errors: [{ message, code }],\r\n        status: \"FAILURE\"\r\n      };\r\n\r\n    case SEARCH:\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case CANCEL:\r\n      return {\r\n        ...state,\r\n        errors: [],\r\n        status: \"CANCEL\",\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CONFIG, OPTIONS_CACHE_KEY } from \"./optionsActions\";\r\n\r\nexport const initialState = {\r\n  beerAPI : `https://api.punkapi.com/v2/beers`,\r\n  [OPTIONS_CACHE_KEY]: {page:\"&page=1\" ,perPage: \"&per_page=10\" } // default\r\n};\r\n\r\n\r\nexport function optionsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CONFIG:\r\n      if (!action.payload || !action.payload[0]) return { ...state };\r\n      let [optKey, value] = action.payload;\r\n      return {\r\n        params: {\r\n          ...state[OPTIONS_CACHE_KEY],\r\n          [optKey]: value\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  fetchFulfilled,\r\n  FETCH_RANDOM,\r\n  SEARCH,\r\n  PENDING,\r\n  CANCEL,\r\n  fetchFailed,\r\n  setStatus,\r\n  fetchCancel\r\n} from \"../reducers/beersActions\";\r\nimport { OPTIONS_CACHE_KEY } from \"../reducers/optionsActions\";\r\n// RXJS + REDUX\r\nimport { of, concat, race, forkJoin } from \"rxjs\";\r\nimport {\r\n  catchError,\r\n  map,\r\n  switchMap,\r\n  debounceTime,\r\n  filter,\r\n  timeout,\r\n  mapTo,\r\n  take,\r\n  withLatestFrom,\r\n  pluck\r\n} from \"rxjs/operators\";\r\nimport { ofType } from \"redux-observable\";\r\n\r\n// API :\r\nconst API_SEARCH = (api,term) => `${api}?beer_name=${encodeURIComponent(term)}`;\r\nconst getFromOptions = (options) => {\r\n  const API = options.beerAPI;\r\n  const params = options[OPTIONS_CACHE_KEY]\r\n  return [API, params]\r\n}\r\n// CONST STREAMS\r\nconst pending$ = of(setStatus(PENDING));\r\n\r\n// ::::::::::::::::\r\n// stream of action functions :\r\n// each function get action$, state$\r\n// ::::::::::::::::\r\n\r\n// function take 3 params: the last is our dependencies :\r\nexport function fetchRandomBeerEpic(action$, state$, { getJSON }) {\r\n  return action$.pipe(\r\n    ofType(FETCH_RANDOM),\r\n    withLatestFrom(state$.pipe(pluck(\"OPTIONS\"))),\r\n    switchMap(([a, options]) => {\r\n      const params = options[OPTIONS_CACHE_KEY]\r\n      const resaultsNum = params.perPage.split(\"=\")[1];\r\n      const [API] = getFromOptions(options) // options.beerAPI\r\n      // create 'waiting' ajax reuqests:\r\n      const reqs = Array.from({ length: resaultsNum }).map(() => {\r\n        // we get Array from the api and will use pluck to access it\r\n        return getJSON(API + \"/random\").pipe(pluck(0));\r\n      });\r\n      const ajax$ = forkJoin(reqs).pipe(\r\n        map(res => fetchFulfilled(res)),\r\n        timeout(5000),\r\n        catchError(err => {\r\n          return of(fetchFailed(err.response));\r\n        })\r\n      );\r\n      return concat(pending$, ajax$);\r\n    })\r\n  );\r\n}\r\n\r\n//added comments for others : but it just same logic as above\r\nexport function searchBeerEpic(action$, state$, { getJSON }) {\r\n  return action$.pipe(\r\n    ofType(SEARCH),\r\n    debounceTime(500),\r\n    filter(({ payload }) => payload.trim() !== \"\"),\r\n    // pluck will get it from state->options->params which is a const\r\n    withLatestFrom(state$.pipe(pluck(\"OPTIONS\"))),\r\n    // we get action and state and we destructre action to payload\r\n    switchMap(([{ payload }, options]) => {\r\nconst [API,params] = getFromOptions(options)\r\n      const spread = [];\r\n      // destructre values :\r\n      Object.entries(params).map(([, val]) => spread.push(val));\r\n      //define Ajax:\r\n      const ajax$ = getJSON(API_SEARCH(API,payload) + [spread.join(\"\")]).pipe(\r\n        map(res => fetchFulfilled(res)),\r\n        catchError(error => {\r\n          return of(fetchFailed(error.response));\r\n        })\r\n      );\r\n      const blocker$ = action$.pipe(\r\n        ofType(CANCEL),\r\n        take(1),\r\n        mapTo(fetchCancel())\r\n      );\r\n      // get together : setStatus and the Ajax call\r\n      return concat(pending$, race(ajax$, blocker$)); // complete the chain immediately\r\n    })\r\n  );\r\n}\r\n\r\nexport function resetBeerEpic(action$) {\r\n  return action$.pipe(\r\n    ofType(CANCEL),\r\n    switchMap(() => of(setStatus(\"IDLE\")))\r\n  );\r\n}\r\n\r\n// THE OLD fetchBeerEpic function. with no random\r\nexport function fetchBeerEpic(action$, state$, { getJSON }) {\r\n  return action$.pipe(\r\n    ofType(FETCH_RANDOM),\r\n    withLatestFrom(state$.pipe(pluck(\"OPTIONS\", ))),\r\n    switchMap(([a, options]) => {\r\n      const [API,params] = getFromOptions(options)\r\n      const spread = [];\r\n      Object.entries(params).map(([, v]) => spread.push(v));\r\n      return concat(\r\n        pending$,\r\n        getJSON(API + \"?\" + [spread.join(\"\")]).pipe(\r\n          map(res => fetchFulfilled(res)),\r\n          timeout(5000),\r\n          catchError(err => {\r\n            return of(fetchFailed(err.response));\r\n          })\r\n        )\r\n      );\r\n    })\r\n  );\r\n}\r\n","import {\r\n  SET_CONFIG,\r\n  OPTIONS,\r\n} from \"../reducers/optionsActions\";\r\nimport { withLatestFrom, pluck, tap, ignoreElements } from \"rxjs/operators\";\r\nimport { ofType } from \"redux-observable\";\r\nimport { of, EMPTY } from \"rxjs\";\r\nimport {saveConfig, OPTIONS_CACHE_KEY} from '../reducers/optionsActions'\r\n\r\n\r\nexport function presistEpic(action$, state$) {\r\n  return action$.pipe(\r\n    ofType(SET_CONFIG),\r\n    //   [OPTIONS] -> use the options name:\r\n    withLatestFrom(state$.pipe(pluck([OPTIONS]))),\r\n    tap(([a, opts]) => {\r\n        const options ={ ...opts[OPTIONS_CACHE_KEY]}\r\n      localStorage.setItem(OPTIONS_CACHE_KEY, JSON.stringify(options));\r\n    }),\r\n    ignoreElements()\r\n  );\r\n}\r\n\r\n// LOAD OPTIONS : RUN ONLY ONCE\r\nexport function hydrateEpic() {\r\n  const maybeConfig = localStorage.getItem(OPTIONS_CACHE_KEY);\r\n  if (typeof maybeConfig === \"string\") {\r\n    try {\r\n      const parsed = JSON.parse(maybeConfig);\r\n      return of(saveConfig(...parsed));\r\n    } catch (e) {\r\n      return EMPTY;\r\n    }\r\n  }\r\n  return EMPTY;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./configureStore\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\";\r\nimport{ajax} from 'rxjs/ajax';\r\n// import reducer:\r\nimport { appReducer } from \"./reducers/appReducer\";\r\nimport { beersReducer } from \"./reducers/beersReducer\";\r\nimport { optionsReducer } from \"./reducers/optionsReducer\";\r\n\r\n// EPICS :\r\nimport {\r\n  fetchBeerEpic,\r\n  fetchRandomBeerEpic,\r\n  searchBeerEpic,\r\n  resetBeerEpic\r\n} from \"./epics/fetchBeers\";\r\nimport { presistEpic, hydrateEpic } from \"./epics/optionsEpic\";\r\n\r\nexport function configureStore(dependencies = {}) {\r\n\r\n  \r\n  const rootEpic = combineEpics(\r\n    fetchBeerEpic,\r\n    searchBeerEpic,\r\n    resetBeerEpic,\r\n    fetchRandomBeerEpic,\r\n    presistEpic,\r\n    hydrateEpic\r\n  );\r\n\r\n  const epicMiddleware = createEpicMiddleware({\r\n    dependencies: {\r\n      getJSON: ajax.getJSON,\r\n      ...dependencies\r\n    }\r\n  });\r\n\r\n  const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    beers: beersReducer,\r\n    OPTIONS: optionsReducer\r\n  });\r\n\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      trace: true,\r\n      traceLimit: 25\r\n    }) || compose;\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(epicMiddleware))\r\n  );\r\n  epicMiddleware.run(rootEpic);\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}